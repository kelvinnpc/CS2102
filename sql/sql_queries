/** 
 * This Page contains all the queries used in the applications
*/

//advertiseRide.js
var insertRide_query = 'INSERT INTO Rides (did,source, destination, numSeats, date) VALUES ($1, $2, $3, $4,$5)';

//clientHelpDesk.js
var insertHelpDesk_query = 'INSERT INTO accessHelpDesk(userID, message) VALUES ($1,$2)';
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';

//findRide.js
var getRideInfo_query = 'With tempTable as ' +
    '(SELECT Rides.rid, Rides.status, Rides.did, source, destination, date, numSeats, coalesce(max(points),0) as maxpt ' +
    'FROM Rides left join Bids on Rides.rid = Bids.rid group by Rides.rid) ' +
    'Select rid, name, source, destination, date, numSeats, maxpt, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = tempTable.did and ratings>-1),2) as ratings ' +
    'FROM tempTable join Users on Users.nric = tempTable.did ' +
    `WHERE tempTable.rid NOT IN (SELECT B.rid FROM Bids B where B.pid=$1) and ` +
    `tempTable.did<>$1 and now()<date and numSeats<>0 and status='open'`;
var insertBid_query = 'INSERT INTO Bids VALUES($1, $2, $3)';
var getWalletBalance_query = 'SELECT balance from Wallet where Wallet.wid = $1';
var getTotalBids_query = `SELECT sum(points) as totalBid from Bids where Bids.pid=$1 and Bids.status='pending'`;
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';
//Bid
var getRideInfo_query = 'With tempTable as ' +
    '(SELECT Rides.rid, Rides.status, Rides.did, source, destination, date, numSeats, coalesce(max(points),0) as maxpt ' +
    'FROM Rides left join Bids on Rides.rid = Bids.rid group by Rides.rid) ' +
    'Select rid, name, source, destination, date, numSeats, maxpt, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = tempTable.did and ratings>-1),2) as ratings ' +
    'FROM tempTable join Users on Users.nric = tempTable.did ' +
    `WHERE tempTable.rid NOT IN (SELECT B.rid FROM Bids B where B.pid=$1) and ` +
    `tempTable.did<>$1 and now()<date and numSeats<>0 and status='open' and lower(source) LIKE $2 and ` +
    `lower(destination) LIKE $3`;

// manageBids.js
var getManageBidInfo_query = 'With tempTable as ' +
    '(SELECT Rides.rid, Rides.did, source, destination, date, numSeats, coalesce(max(points),0) as maxpt ' +
    'FROM Rides left join Bids on Rides.rid = Bids.rid group by Rides.rid) ' +
    'Select T.rid, name, source, destination, date, numSeats, maxpt, status, Bids.points, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = T.did and ratings>-1),2) as ratings ' +
    'FROM tempTable T join Users on Users.nric = T.did join Bids on T.rid=Bids.rid ' +
    'WHERE Bids.pid = $1 order by status, date desc';
var insertBid_query = 'INSERT INTO Bids VALUES($1, $2, $3)';
var getWalletBalance_query = 'SELECT balance from Wallet where Wallet.wid = $1';
var getTotalBids_query = `SELECT sum(points) as totalBid from Bids where Bids.pid=$1 and Bids.status='pending'`;
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';
var getBidInfo_query = 'With tempTable as ' +
    '(SELECT Rides.rid, Rides.did, source, destination, date, numSeats, coalesce(max(points),0) as maxpt ' +
    'FROM Rides left join Bids on Rides.rid = Bids.rid group by Rides.rid) ' +
    'Select T.rid, name, source, destination, date, numSeats, maxpt, status, Bids.points, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = T.did and ratings>-1),2) as ratings ' +
    'FROM tempTable T join Users on Users.nric = T.did join Bids on T.rid=Bids.rid ' +
    'WHERE Bids.pid = $1 and lower(source) LIKE $2 and lower(destination) LIKE $3';

// manageRides.js
var getBiddedRides_query = 'Select Bids.pid, Rides.rid, Rides.status, Users.name, Users.phonenumber, source, destination, date, numSeats, Bids.points, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = Bids.pid),2) as ratings, ' +
    `(SELECT count(pid) FROM Bids where Bids.status = 'Ride Confirmed' and Bids.rid = Rides.rid group by Rides.rid) as count ` +
    `FROM (Rides join Bids on Bids.rid = Rides.rid) join Users on Users.nric=Bids.pid ` +
    `WHERE Rides.did=$1 and Bids.status = 'Ride Confirmed' order by Rides.status desc`;
var getNotBiddedRides_query = 'Select * from Rides where Rides.rid not in (select rid from bids) and Rides.did=$1 order by Rides.status desc';
var passengerDeduction_query = `INSERT INTO Uses(pid,transaction) ` +
    `select pid, points*-1 from bids where status='Ride Confirmed' and rid = $1`;
var driverAddition_query = `INSERT INTO Uses(pid,transaction,date) ` +
    `select $2, points, now() + concat(row_number () over (order by points), ' milliseconds')::interval ` +
    `from bids where status='Ride Confirmed' and rid = $1`;
var refundPoints_query = `UPDATE Bids set status = 'rejected', points=0 where rid=$1 and status='pending'`;
var updateRideStatus_query = `UPDATE Rides set status = 'close' where rid=$1`;
//Upper Table
var getBiddedRides_query = 'Select Bids.pid, Rides.rid, Rides.status, Users.name, Users.phonenumber, source, destination, date, numSeats, Bids.points, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = Bids.pid),2) as ratings, ' +
    `(SELECT count(pid) FROM Bids where Bids.status = 'Ride Confirmed' and Bids.rid = Rides.rid group by Rides.rid) as count ` +
    `FROM (Rides join Bids on Bids.rid = Rides.rid) join Users on Users.nric=Bids.pid ` +
    `WHERE Rides.did=$1 and Bids.status = 'Ride Confirmed' and lower(source) LIKE $2 and lower(destination) LIKE $3`;
var getNotBiddedRides_query = 'Select * from Rides where Rides.rid not in (select rid from bids) and Rides.did=$1 order by Rides.status desc';
//Lower Table
var getBiddedRides_query = 'Select Bids.pid, Rides.rid, Rides.status, Users.name, Users.phonenumber, source, destination, date, numSeats, Bids.points, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = Bids.pid),2) as ratings, ' +
    `(SELECT count(pid) FROM Bids where Bids.status = 'Ride Confirmed' and Bids.rid = Rides.rid group by Rides.rid) as count ` +
    `FROM (Rides join Bids on Bids.rid = Rides.rid) join Users on Users.nric=Bids.pid ` +
    `WHERE Rides.did=$1 and Bids.status = 'Ride Confirmed'`;
var getNotBiddedRides_query = 'Select * from Rides where Rides.rid not in (select rid from bids) and Rides.did=$1 ' +
    `and lower(source) LIKE $2 and lower(destination) LIKE $3`;

// passengerHistory.js
var getRides_query = 'SELECT H.rid, U.name, R.source, R.destination, R.date, H.points ' +
    'FROM History H join Rides R on H.rid=R.rid join Users U on U.nric=R.did where H.userID=$1 order by R.date desc';
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';
//Search
var getRides_query = 'SELECT H.rid, U.name, R.source, R.destination, R.date, H.points ' +
    'FROM History H join Rides R on H.rid=R.rid join Users U on U.nric=R.did where H.userID=$1 ' +
    `and lower(source) LIKE $2 and lower(destination) LIKE $3 and lower(name) LIKE $4`;

// profile.js
var getUserInfo_query = 'SELECT * FROM Users where nric=$1';
var getNumTrips_query = `SELECT count(R.rid) q FROM History H join Rides R on H.rid=R.rid where H.userID=$1 and R.date > current_timestamp - interval '30 day'`;
var getReceivedRating30days_query = `SELECT ROUND(coalesce(avg(Rates.ratings),-1),2) q FROM Rates join Rides on Rates.rid = Rides.rid ` +
    `WHERE Rates.ratedid=$1 and ratings>-1 and Rides.date > current_timestamp - interval '30 day'`;
var getReceivedRatingAll_query = `SELECT ROUND(coalesce(avg(Rates.ratings),-1),2) q FROM Rates join Rides on Rates.rid = Rides.rid ` +
    `WHERE Rates.ratedid=$1 and ratings>-1`;
var getGivenRating30days_query = `SELECT ROUND(coalesce(avg(Rates.ratings),-1),2) q FROM Rates join Rides on Rates.rid = Rides.rid ` +
    `WHERE Rates.raterid=$1 and Rides.date > current_timestamp - interval '30 day' and ratings>-1`;
var getGivenRatingAll_query = `SELECT ROUND(coalesce(avg(Rates.ratings),-1),2) q FROM Rates join Rides on Rates.rid = Rides.rid ` +
    `WHERE Rates.raterid=$1 and ratings>-1`;
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';

// rate.js
var getPendingRate_query = 'SELECT R.ratedid, R.rid, U.name, Rides.source, Rides.destination, Rides.date from Rates R join users U on R.ratedid = U.nric ' +
    'join Rides on Rides.rid=R.rid where raterid=$1 and R.ratings=-1';
var updateRating_query = `UPDATE Rates set ratings=$1 where ratedid=$2 and raterid=$3 and rid=$4`;
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';

// register.js
var insertUser_query = 'INSERT INTO Users VALUES ($1, $2, $3, $4, $5, $6)';
var checkValidUserName_query = 'SELECT count(nric) as count from Users where username=$1';
var checkValidNric_query = 'SELECT count(nric) as count from Users where nric=$1'

// registerAsDriver.js
var insertDriver_query = 'INSERT INTO Drivers(did) VALUES ($1)';
var insertCar_query = 'INSERT INTO Cars(did,platenumber,model,numSeats) VALUES ($1,$2,$3,$4)';
var checkValidPlateNum_query = 'SELECT count(platenumber) as count FROM Cars where platenumber=$1';

// selectPassenger.js
var getPassengerBids_query = 'With tempTable as ' +
    '(SELECT Rides.rid, Rides.did, source, destination, date, numSeats, coalesce(max(points),0) as maxpt ' +
    'FROM Rides left join Bids on Rides.rid = Bids.rid group by Rides.rid) ' +
    'Select Bids.pid, tempTable.rid, Users.name, source, destination, date, numSeats, Bids.points, maxpt, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = Bids.pid),2) as ratings ' +
    `FROM (tempTable join Bids on Bids.rid = tempTable.rid) join Users on Users.nric=Bids.pid ` +
    `WHERE tempTable.did=$1 and Bids.status = 'pending' ` +
    'and now()<date';
var updateBidStatus_query = `update Bids set status='Ride Confirmed' where pid=$1 and rid=$2`;
var updateNumSeats_query = 'UPDATE Rides set numSeats = numSeats - 1 where rid=$1';
var insertRatePassenger_query = 'INSERT INTO Rates(raterid,ratedid,ratings,rid) VALUES ($1,$2,-1,$3)';
var insertRateDriver_query = 'INSERT INTO Rates(raterid,ratedid,ratings,rid) VALUES ($2,$1,-1,$3)';
var insertRideHistory_query = 'INSERT INTO History(userID,rid,points) VALUES ($1,$2,$3)';
//Select
var getPassengerBids_query = 'With tempTable as ' +
    '(SELECT Rides.rid, Rides.did, source, destination, date, numSeats, coalesce(max(points),0) as maxpt ' +
    'FROM Rides left join Bids on Rides.rid = Bids.rid group by Rides.rid) ' +
    'Select Bids.pid, tempTable.rid, Users.name, source, destination, date, numSeats, Bids.points, maxpt, ' +
    'ROUND((SELECT avg(ratings) FROM Rates R1 where R1.ratedID = Bids.pid),2) as ratings ' +
    `FROM (tempTable join Bids on Bids.rid = tempTable.rid) join Users on Users.nric=Bids.pid ` +
    `WHERE tempTable.did=$1 and Bids.status = 'pending' ` +
    'and now()<date and lower(source) LIKE $2 and lower(destination) LIKE $3 and lower(Users.name) LIKE $4';


// wallet.js
var usesWallet_query = 'INSERT INTO Uses VALUES($1, $2)';
var getWalletBalance_query = 'SELECT balance from Wallet where Wallet.wid = $1';
var getTotalBids_query = `SELECT sum(points) as totalBid from Bids where Bids.pid=$1 and Bids.status='pending'`;
var isDriver_query = 'SELECT count(did) as count from Drivers where $1 = did';
var getTransactionSummary_query = `select coalesce(sum(case when transaction >= 0 then transaction end),0) as topUp, ` +
    `coalesce(sum(case when transaction < 0 then transaction end),0) as deducted, ` +
    `to_char(date, 'YYYY-MM') as year_month from uses where $1 = uses.pid group by year_month order by year_month desc`;
//Topup
var getTransactionSummary_query = `select coalesce(sum(case when transaction >= 0 then transaction end),0) as topUp, ` +
    `coalesce(sum(case when transaction < 0 then transaction end),0) as deducted, ` +
    `to_char(date, 'YYYY-MM') as year_month from uses where $1 = uses.pid `;    